version: 2.1
orbs:
  aws/ecr: circleci/ecr@8.1.2
  node: circleci/node@4.1     # Used for the Frontend tests
  python: circleci/python@1.2 # Used for the Backend tests

parameters:
  run-frontend:
    type: boolean
    default: false
  run-backend:
    type: boolean
    default: false

jobs:
  backend-lint:
    docker:
      - image: cimg/python:3.8
    resource_class: small
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          app-dir: backend
      - run:
          name: Lint
          command: python3 -m pylint --rcfile backend/pylintrc backend/openapi_server
  backend-test:
    docker:
      - image: cimg/python:3.8
    resource_class: large
    parallelism: 4
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          app-dir: backend
      - run:
          name: Run tests
          command: |
            mkdir tmp
            circleci tests glob "backend/openapi_server/test/test_*.py" | circleci tests split > tmp/tests_to_run
            pytest $(cat tmp/tests_to_run) --junitxml=tmp/test_results.xml --html=tmp/test_results.html
      - store_test_results:
          path: tmp/test_results.xml
      - store_artifacts:
          path: tmp
  frontend-lint:
    docker:
      - image: cimg/node:15.1
    resource_class: small
    steps:
      - checkout
      - node/install-packages:
          with-cache: true
          app-dir: frontend
      - run:
          name: Lint
          command: npm --prefix frontend run lint
  frontend-test:
    docker:
      - image: cimg/node:15.1-browsers
    resource_class: large
    parameters:
      test-depth:
        type: enum
        enum: ["e2e", "unit"]
        default: unit
    steps:
      - checkout
      - node/install-packages:
          with-cache: true
          app-dir: frontend
      - run:
          name: Run tests
          command: npm --prefix frontend run test:<< parameters.test-depth >>

workflows:
  frontend:
    when: << pipeline.parameters.run-frontend >>
    jobs:
      - frontend-lint
      - frontend-test:
          test-depth: unit
  backend:
    when: << pipeline.parameters.run-backend >>
    jobs:
      - backend-lint
      - backend-test
      - aws-ecr/build-and-push-image:
          context: aws
          create-repo: true
          path: backend
          public-registry: true
          repo: awesomecicd
          requires:
            - backend-lint
            - backend-test
          tag: $CIRCLE_BUILD_NUM